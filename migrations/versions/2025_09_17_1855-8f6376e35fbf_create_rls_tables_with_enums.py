"""Create RLS tables with enums

Revision ID: 8f6376e35fbf
Revises: 
Create Date: 2025-09-17 18:55:05.564502

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8f6376e35fbf"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tenants",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("slug", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tenants_id"), "tenants", ["id"], unique=False)
    op.create_index(op.f("ix_tenants_slug"), "tenants", ["slug"], unique=True)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=True),
        sa.Column("hashed_password", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_login_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenants.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(
        "ix_users_tenant_created",
        "users",
        ["tenant_id", "created_at"],
        unique=False,
    )
    op.create_index(
        "ix_users_tenant_email", "users", ["tenant_id", "email"], unique=True
    )
    op.create_index(
        op.f("ix_users_tenant_id"), "users", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_users_tenant_role", "users", ["tenant_id", "role"], unique=False
    )
    op.create_table(
        "conversations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("session_id", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=True),
        sa.Column("conversation_type", sa.String(length=15), nullable=False),
        sa.Column("channel", sa.String(length=15), nullable=False),
        sa.Column("status", sa.String(length=10), nullable=False),
        sa.Column("resolution_time_minutes", sa.Integer(), nullable=True),
        sa.Column("satisfaction_score", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("closed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenants.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_conversations_channel", "conversations", ["channel"], unique=False
    )
    op.create_index(
        op.f("ix_conversations_id"), "conversations", ["id"], unique=False
    )
    op.create_index(
        "ix_conversations_tenant_created",
        "conversations",
        ["tenant_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversations_tenant_id"),
        "conversations",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        "ix_conversations_tenant_status",
        "conversations",
        ["tenant_id", "status"],
        unique=False,
    )
    op.create_index(
        "ix_conversations_tenant_user",
        "conversations",
        ["tenant_id", "user_id"],
        unique=False,
    )
    op.create_index(
        "ix_conversations_type",
        "conversations",
        ["conversation_type"],
        unique=False,
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("message_type", sa.String(length=15), nullable=False),
        sa.Column("ai_model", sa.String(length=50), nullable=True),
        sa.Column("tokens_used", sa.Integer(), nullable=True),
        sa.Column("user_feedback", sa.String(length=15), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenants.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_messages_ai_model", "messages", ["ai_model"], unique=False
    )
    op.create_index(
        "ix_messages_conversation_created",
        "messages",
        ["conversation_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_messages_conversation_id"),
        "messages",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(op.f("ix_messages_id"), "messages", ["id"], unique=False)
    op.create_index(
        "ix_messages_tenant_conversation",
        "messages",
        ["tenant_id", "conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_messages_tenant_id"), "messages", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_messages_tenant_user",
        "messages",
        ["tenant_id", "user_id"],
        unique=False,
    )
    op.create_index(
        "ix_messages_type", "messages", ["message_type"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_messages_type", table_name="messages")
    op.drop_index("ix_messages_tenant_user", table_name="messages")
    op.drop_index(op.f("ix_messages_tenant_id"), table_name="messages")
    op.drop_index("ix_messages_tenant_conversation", table_name="messages")
    op.drop_index(op.f("ix_messages_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_conversation_id"), table_name="messages")
    op.drop_index("ix_messages_conversation_created", table_name="messages")
    op.drop_index("ix_messages_ai_model", table_name="messages")
    op.drop_table("messages")
    op.drop_index("ix_conversations_type", table_name="conversations")
    op.drop_index("ix_conversations_tenant_user", table_name="conversations")
    op.drop_index("ix_conversations_tenant_status", table_name="conversations")
    op.drop_index(
        op.f("ix_conversations_tenant_id"), table_name="conversations"
    )
    op.drop_index(
        "ix_conversations_tenant_created", table_name="conversations"
    )
    op.drop_index(op.f("ix_conversations_id"), table_name="conversations")
    op.drop_index("ix_conversations_channel", table_name="conversations")
    op.drop_table("conversations")
    op.drop_index("ix_users_tenant_role", table_name="users")
    op.drop_index(op.f("ix_users_tenant_id"), table_name="users")
    op.drop_index("ix_users_tenant_email", table_name="users")
    op.drop_index("ix_users_tenant_created", table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_tenants_slug"), table_name="tenants")
    op.drop_index(op.f("ix_tenants_id"), table_name="tenants")
    op.drop_table("tenants")
    # ### end Alembic commands ###
